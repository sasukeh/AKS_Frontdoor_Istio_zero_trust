apiVersion: v1
kind: Namespace
metadata:
  name: frontdoor-demo
  labels:
    istio-injection: enabled
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: demo-app
  namespace: frontdoor-demo
spec:
  replicas: 3
  selector:
    matchLabels:
      app: demo-app
  template:
    metadata:
      labels:
        app: demo-app
    spec:
      tolerations:
      - key: "workload"
        operator: "Equal"
        value: "user"
        effect: "NoSchedule"
      initContainers:
      - name: template-processor
        image: alpine:latest
        command: ["/bin/sh"]
        args:
        - -c
        - |
          apk add --no-cache gettext
          envsubst < /template/index.html.template > /usr/share/nginx/html/index.html
          chmod 644 /usr/share/nginx/html/index.html
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        volumeMounts:
        - name: template
          mountPath: /template
        - name: html
          mountPath: /usr/share/nginx/html
      containers:
      - name: demo-app
        image: nginx:latest
        ports:
        - containerPort: 80
        resources:
          requests:
            memory: "64Mi"
            cpu: "100m"
          limits:
            memory: "128Mi"
            cpu: "200m"
        volumeMounts:
        - name: html
          mountPath: /usr/share/nginx/html
        - name: nginx-config
          mountPath: /etc/nginx/conf.d/default.conf
          subPath: default.conf
      volumes:
      - name: template
        configMap:
          name: demo-app-template
      - name: html
        emptyDir: {}
      - name: nginx-config
        configMap:
          name: nginx-config
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: demo-app-template
  namespace: frontdoor-demo
data:
  index.html.template: |
    <!DOCTYPE html>
    <html lang="ja">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Azure Front Door + Istio Demo</title>
        <style>
            body { font-family: Arial, sans-serif; margin: 40px; background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); color: white; }
            .container { max-width: 800px; margin: 0 auto; text-align: center; }
            .header { background: rgba(255,255,255,0.1); padding: 20px; border-radius: 10px; margin-bottom: 20px; }
            .info { background: rgba(255,255,255,0.1); padding: 15px; border-radius: 10px; margin: 10px 0; }
            .success { color: #4CAF50; font-weight: bold; }
            .pod-info { background: rgba(255,255,255,0.2); padding: 15px; border-radius: 10px; margin: 10px 0; font-family: monospace; }
        </style>
    </head>
    <body>
        <div class="container">
            <div class="header">
                <h1>üéâ Azure Front Door + Istio + AKS Demo</h1>
                <p class="success">‚úÖ Connection Successful!</p>
            </div>
            <div class="info">
                <h3>üèóÔ∏è Architecture Flow</h3>
                <p>Azure Front Door ‚Üí Private Link Service ‚Üí Istio Gateway ‚Üí Kubernetes Pod</p>
            </div>
            <div class="pod-info">
                <h3>üìä Pod Information</h3>
                <p><strong>Pod Name:</strong> ${POD_NAME}</p>
                <p><strong>Pod IP:</strong> ${POD_IP}</p>
                <p><strong>Timestamp:</strong> <span id="timestamp"></span></p>
            </div>
        </div>
        <script>
            document.getElementById('timestamp').textContent = new Date().toLocaleString('ja-JP');
        </script>
    </body>
    </html>
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
  namespace: frontdoor-demo
data:
  default.conf: |
    server {
        listen       80;
        listen  [::]:80;
        server_name  localhost;
        charset utf-8;
        
        location / {
            root   /usr/share/nginx/html;
            index  index.html index.htm;
        }
        
        # Health check endpoint
        location /healthz {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
        
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   /usr/share/nginx/html;
        }
    }
---
apiVersion: v1
kind: Service
metadata:
  name: demo-app-service
  namespace: frontdoor-demo
spec:
  selector:
    app: demo-app
  ports:
  - port: 80
    targetPort: 80
    name: http
  type: ClusterIP
